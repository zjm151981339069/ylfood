<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.spfood.oms.order.intf.domain.OrderPay" >
  <resultMap id="BaseResultMap" type="com.spfood.oms.order.intf.domain.OrderPay"  >
   
    <id column="payId" property="payId" jdbcType="BIGINT" />
    <result column="orderNo" property="orderNo" jdbcType="VARCHAR" />
    <result column="isPay" property="isPay" jdbcType="INTEGER" />
    <result column="paySum" property="paySum" jdbcType="DECIMAL" />
    <result column="payTime" property="payTime" jdbcType="TIMESTAMP" />
    <result column="payType" property="payType" jdbcType="INTEGER" />
    <result column="transcation" property="transcation" jdbcType="VARCHAR" />
    <result column="payee" property="payee" jdbcType="VARCHAR" />
    <result column="payeeCode" property="payeeCode" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="isArrived" property="isArrived" jdbcType="INTEGER" />
    <result column="isSendFms" property="isSendFms" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ORDERNO, PAYID, ISPAY, PAYSUM, PAYTIME, PAYTYPE, TRANSCATION, PAYEECODE, PAYEE, ACCOUNT, 
    ISARRIVED, ISSENDFMS
  </sql>
  <sql id="where_query">
	  <where>
	      <if test="payId != null" >
	       and PAYID = #{payId,jdbcType=BIGINT}
	      </if>
	      <if test="orderNo != null" >
	       and ORDERNO = #{orderNo,jdbcType=VARCHAR}
	      </if>
	      <if test="isPay != null" >
	       and ISPAY = #{isPay,jdbcType=INTEGER}
	      </if>
	      <if test="paySum != null" >
	       and PAYSUM = #{paySum,jdbcType=DECIMAL}
	      </if>
	      <if test="payTime != null" >
	       and PAYTIME = #{payTime,jdbcType=TIMESTAMP}
	      </if>
	      <if test="payType != null" >
	       and PAYTYPE = #{payType,jdbcType=INTEGER}
	      </if>
	      <if test="transcation != null" >
	       and TRANSCATION = #{transcation,jdbcType=VARCHAR}
	      </if>
	      <if test="payeeCode != null" >
	       and PAYEECODE = #{payeeCode,jdbcType=VARCHAR}
	      </if>
	      <if test="payee != null" >
	       and PAYEE = #{payee,jdbcType=VARCHAR}
	      </if>
	      <if test="account != null" >
	       and ACCOUNT = #{account,jdbcType=VARCHAR}
	      </if>
	      <if test="isArrived != null" >
	       and ISARRIVED = #{isArrived,jdbcType=INTEGER}
	      </if>
	      <if test="isSendFms != null" >
	       and ISSENDFMS = #{isSendFms,jdbcType=INTEGER}
	      </if>
	  </where>
  </sql>
  
  <select id="select" resultMap="BaseResultMap" parameterType="com.spfood.oms.order.intf.domain.OrderPay" >
    select 
    <include refid="Base_Column_List" />
    from oms_order_pay
    <include refid="where_query"/>
  </select>
  
  <select id="selectOrderPayListByOrderNo" resultMap="BaseResultMap" parameterType="java.util.List" >
    select 
    <include refid="Base_Column_List" />
    from oms_order_pay
     where ORDERNO in
     <foreach item="orderNo" index="index" collection="list " open="(" separator="," close=")">  
	  	 #{orderNo,jdbcType=VARCHAR}
	  </foreach>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from oms_order_pay
    where ORDERNO = #{orderNo,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.spfood.oms.order.intf.domain.OrderPay" >
    insert into oms_order_pay (ORDERNO, ISPAY, 
      PAYSUM, PAYTIME, PAYTYPE, 
      TRANSCATION, PAYEECODE, PAYEE, 
      ACCOUNT, ISARRIVED, ISSENDFMS)
    values (#{orderNo,jdbcType=VARCHAR}, #{isPay,jdbcType=INTEGER}, 
      #{paySum,jdbcType=DECIMAL}, #{payTime,jdbcType=TIMESTAMP}, #{payType,jdbcType=INTEGER}, 
      #{transcation,jdbcType=VARCHAR}, #{payeeCode,jdbcType=VARCHAR}, #{payee,jdbcType=VARCHAR}, 
      #{account,jdbcType=VARCHAR}, #{isArrived,jdbcType=INTEGER}, #{isSendFms,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.spfood.oms.order.intf.domain.OrderPay" >
    insert into oms_order_pay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderNo != null" >
        ORDERNO,
      </if>
      <if test="isPay != null" >
        ISPAY,
      </if>
      <if test="paySum != null" >
        PAYSUM,
      </if>
      <if test="payTime != null" >
        PAYTIME,
      </if>
      <if test="payType != null" >
        PAYTYPE,
      </if>
      <if test="transcation != null" >
        TRANSCATION,
      </if>
      <if test="payeeCode != null" >
        PAYEECODE,
      </if>
      <if test="payee != null" >
        PAYEE,
      </if>
      <if test="account != null" >
        ACCOUNT,
      </if>
      <if test="isArrived != null" >
        ISARRIVED,
      </if>
      <if test="isSendFms != null" >
        ISSENDFMS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="isPay != null" >
        #{isPay,jdbcType=INTEGER},
      </if>
      <if test="paySum != null" >
        #{paySum,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="transcation != null" >
        #{transcation,jdbcType=VARCHAR},
      </if>
      <if test="payeeCode != null" >
        #{payeeCode,jdbcType=VARCHAR},
      </if>
      <if test="payee != null" >
        #{payee,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="isArrived != null" >
        #{isArrived,jdbcType=INTEGER},
      </if>
      <if test="isSendFms != null" >
        #{isSendFms,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateOrderPayByOrderNoSelective" parameterType="com.spfood.oms.order.intf.domain.OrderPay" >
    update oms_order_pay
    <set >
      <if test="payId != null" >
        PAYID = #{payId,jdbcType=BIGINT},
      </if>
      <if test="isPay != null" >
        ISPAY = #{isPay,jdbcType=INTEGER},
      </if>
      <if test="paySum != null" >
        PAYSUM = #{paySum,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null" >
        PAYTIME = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null" >
        PAYTYPE = #{payType,jdbcType=INTEGER},
      </if>
      <if test="transcation != null" >
        TRANSCATION = #{transcation,jdbcType=VARCHAR},
      </if>
      <if test="payeeCode != null" >
        PAYEECODE = #{payeeCode,jdbcType=VARCHAR},
      </if>
      <if test="payee != null" >
        PAYEE = #{payee,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        ACCOUNT = #{account,jdbcType=VARCHAR},
      </if>
      <if test="isArrived != null" >
        ISARRIVED = #{isArrived,jdbcType=INTEGER},
      </if>
      <if test="isSendFms != null" >
        ISSENDFMS = #{isSendFms,jdbcType=INTEGER},
      </if>
    </set>
    where ORDERNO = #{orderNo,jdbcType=VARCHAR}
  </update>
  <update id="updateBatchOrderPayIsPay" parameterType="java.util.List" >
    update oms_order_pay
	    SET ISPAY = CASE ORDERNO 
		    <foreach item="orderPay" index="index" collection="list " >  
		  	  WHEN #{orderPay.orderNo,jdbcType=VARCHAR} THEN #{orderPay.isPay,jdbcType=INTEGER}
		  	</foreach> 
    	END
    where ORDERNO in 
  	  <foreach item="orderPay" index="index" collection="list " open="(" separator="," close=")">  
	  	 #{orderPay.orderNo,jdbcType=VARCHAR}
	  </foreach>
  </update>
  <update id="updateBatchOrderPayIsSendFMS" parameterType="java.util.List" >
    update oms_order_pay
	    SET ISSENDFMS = CASE ORDERNO 
		    <foreach item="orderPay" index="index" collection="list " >  
		  	  WHEN #{orderPay.orderNo,jdbcType=VARCHAR} THEN #{orderPay.isSendFms,jdbcType=INTEGER}
		  	</foreach> 
    	END
    where ORDERNO in 
  	  <foreach item="orderPay" index="index" collection="list " open="(" separator="," close=")">  
	  	 #{orderPay.orderNo,jdbcType=VARCHAR}
	  </foreach>
  </update>
  
  <!-- 查询要同步到FMS的订单支付信息 ，查询状态为3的。-->
  <select id="getUnSynOrderPayInfo" resultMap="BaseResultMap">
  	SELECT 
  		oop.ORDERNO, 
  		oop.PAYID, 
  		oop.ISPAY, 
  		oop.PAYSUM, 
  		oop.PAYTIME, 
  		oop.PAYTYPE, 
  		oop.TRANSCATION, 
  		oop.PAYEECODE, 
  		oop.PAYEE, 
  		oop.ACCOUNT, 
    	oop.ISARRIVED, 
    	oop.ISSENDFMS
    FROM OMS_ORDER_TEMP oot
	RIGHT JOIN OMS_ORDER_PAY oop
    ON  oot.ORDERNO = oop.ORDERNO 
	WHERE oot.`STATUS` = '3'
  </select>
  
  
</mapper>